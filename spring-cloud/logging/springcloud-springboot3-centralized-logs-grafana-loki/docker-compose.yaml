version: '3'
 
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch-container
    ports:
        - 9200:9200
    environment:
        discovery.type: single-node
        xpack.security.enabled: false
    networks:
      - helloworld-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana-container
    ports:
        - 5601:5601
    restart: on-failure
    depends_on:
        - elasticsearch
    networks:
      - helloworld-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
    ports:
      - "5044:5044"
      - "9600:9600"
      - "5000:5000"
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    depends_on:
      - elasticsearch
    networks:
      - helloworld-network
  
  mysql:
    image: mysql:5.7
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: my_secret_password
      MYSQL_DATABASE: database
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    depends_on:
        - logstash
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s    
    networks:
      - helloworld-network
#    volumes:
#      - dbdata:/var/lib/mysql

  be:
    image: be-image:0.0.1
    container_name: be-container
    build:
      context: ./springcloud-fe-thymeleaf-be-springboot-db-sql-mysql-elk_BE
      dockerfile: Dockerfile
    environment:
      spring.datasource.url: jdbc:mysql://mysql:3306/database
      logstash.server: logstash
      logstash.port: 5000
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 8081:8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - helloworld-network

  fe:
    image: fe-image:0.0.1
    container_name: fe-container
    build:
      context: ./springcloud-fe-thymeleaf-be-springboot-db-sql-mysql-elk_FE
      dockerfile: Dockerfile
    environment:
      api.url: http://be:8081
      logstash.server: logstash
      logstash.port: 5000
    depends_on:
      - be
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - helloworld-network

networks:
  helloworld-network:
    name: helloworld-network-name