version: '3'

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
      - ./service-rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./service-rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./service-rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./service-rabbitmq/logs:/var/log/rabbitmq/log
    networks:
        - helloworld-network
  
  service-discovery:
    image: service-discovery-image
    container_name: service-discovery-container
    build:
      context: ./service-discovery
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-discovery
      - server.port=8761
      - eureka.client.fetch-registry=false
      - eureka.client.register-with-eureka=false
    ports:
      - 8761:8761
    healthcheck:
      test: "exit 0"
    depends_on:
      - rabbitmq
    networks:
      - helloworld-network

  service-helloworld-publisher:
    image: service-helloworld-publisher-image
    container_name: service-helloworld-publisher-container
    build:
      context: ./service-helloworld-publisher
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-helloworld-publisher
      - server.port=9090
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - service.helloworld.message=Hello World
      - SPRING_RABBITMQ_HOST=rabbitmq
      - queue.name=helloworld-queue
    ports:
      - 9090:9090
    healthcheck:
      test: "exit 0"
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - helloworld-network

  service-helloworld-subscriber:
    image: service-helloworld-subscriber-image
    container_name: service-helloworld-subscriber-container
    build:
      context: ./service-helloworld-subscriber
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-helloworld-subscriber
      - server.port=8080
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - SPRING_RABBITMQ_HOST=rabbitmq
      - queue.name=helloworld-queue
    ports:
      - 8080:8080
    healthcheck:
      test: "exit 0"
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - helloworld-network

  service-gateway:
    image: service-gateway-image
    container_name: service-gateway-container
    build:
      context: ./service-gateway
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-gateway
      - server.port=8762
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoint.gateway.enabled=true
      - management.endpoints.web.exposure.include=gateway
      - spring.cloud.gateway.routes[0].id=service-helloworld-publisher
      - spring.cloud.gateway.routes[0].uri=lb://service-helloworld-publisher
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/publish/**
      - spring.cloud.gateway.routes[1].id=service-helloworld-subscriber
      - spring.cloud.gateway.routes[1].uri=lb://service-helloworld-subscriber
      - spring.cloud.gateway.routes[1].predicates[0]=Path=/subscribe/**
    ports:
      - 8762:8762
    healthcheck:
      test: "exit 0"
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - helloworld-network  

networks:
  helloworld-network:
    name: helloworld-network