version: '3'

services:
  
  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
      container_name: elasticsearch-container
      environment:
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - "discovery.type=single-node"
          - xpack.security.enabled=false
      ports:
          - "9200:9200"
      volumes:
          - elasticsearch_data:/usr/share/elasticsearch/data
      healthcheck:
        test: "exit 0"
      networks:
          - helloworld-network

  kibana:
      image: docker.elastic.co/kibana/kibana:8.6.1
      container_name: kibana-container
      ports:
          - "5601:5601"
      environment:
          ELASTICSEARCH_URL: http://elasticsearch:9200
          ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      healthcheck:
        test: "exit 0"
      depends_on:
        elasticsearch:
          condition: service_healthy
      networks:
          - helloworld-network

  logstash:
      image: docker.elastic.co/logstash/logstash:8.6.1
      container_name: logstash-container
      volumes:
        - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
        - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      ports:
        - "5044:5044"
        - "5000:5000/tcp"
        - "5000:5000/udp"
        - "9600:9600"
      environment:
        LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      healthcheck:
        test: "exit 0"
      networks:
        - helloworld-network
      depends_on:
        elasticsearch:
          condition: service_healthy

  service-discovery:
    image: service-discovery-image
    container_name: service-discovery-container
    build:
      context: ./service-discovery
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-discovery
      - server.port=8761
      - eureka.client.fetch-registry=false
      - eureka.client.register-with-eureka=false
    ports:
      - 8761:8761
    healthcheck:
      test: "exit 0"
    depends_on:
      - logstash 
    networks:
      - helloworld-network

  service-config:
    image: service-config-image
    container_name: service-config-container
    build:
      context: ./service-config
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-config
      - server.port=8888
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - spring.cloud.config.server.git.uri=https://github.com/wisniewskikr/springcloud-config
      #- spring.cloud.config.server.git.clone-on-start=true
    ports:
      - 8888:8888
    healthcheck:
      test: "exit 0"
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - helloworld-network

  service-helloworld:
    image: service-helloworld-image
    container_name: service-helloworld-container
    build:
      context: ./service-helloworld
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-helloworld
      - server.port=8080
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - spring.config.import=optional:configserver:http://service-config:8888
    ports:
      - 8080:8080
    healthcheck:
      test: "exit 0"
    depends_on:
      service-config:
        condition: service_healthy
    networks:
      - helloworld-network

  service-gateway:
    image: service-gateway-image
    container_name: service-gateway-container
    build:
      context: ./service-gateway
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-gateway
      - server.port=8762
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - spring.cloud.gateway.routes[0].id=service-helloworld
      - spring.cloud.gateway.routes[0].uri=lb://service-helloworld
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/**
      - spring.cloud.gateway.routes[0].filters[0]=RewritePath=/,/
    ports:
      - 8762:8762
    healthcheck:
      test: "exit 0"
    depends_on:
      service-helloworld:
        condition: service_healthy
    networks:
      - helloworld-network  

networks:
  helloworld-network:
    name: helloworld-network

volumes:
    elasticsearch_data:
        driver: local