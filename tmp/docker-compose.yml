version: '3'

services:

  system-eureka-naming-server-service:
    image: system-eureka-naming-server-service
    container_name: system-eureka-naming-server-service
    build:
      context: ./system-eureka-naming-server-service
      dockerfile: Dockerfile
    environment:
      - spring.application.name=system-eureka-naming-server-service
      - server.port=8761
      - eureka.client.fetch-registry=false
      - eureka.client.register-with-eureka=false
    ports:
      - "8761:8761"
    healthcheck:
      test: "exit 0"
    networks:
      - network

  custom-greeting-service:
    image: custom-greeting-service
    container_name: custom-greeting-service
    build:
      context: ./custom-greeting-service
      dockerfile: Dockerfile
    environment:
      - spring.application.name=custom-greeting-service
      - server.port=8080
      - eureka.client.service-url.defaultZone=http://system-eureka-naming-server-service:8761/eureka
    ports:
      - "8080:8080"
    healthcheck:
      test: "exit 0"
    networks:
      - network
    depends_on:
      system-eureka-naming-server-service:
        condition: service_healthy

  system-api-gateway-service:
    image: system-api-gateway-service
    container_name: system-api-gateway-service
    build:
      context: ./system-api-gateway-service
      dockerfile: Dockerfile
    environment:
      - spring.application.name=system-api-gateway-service
      - server.port=8090
      - eureka.client.service-url.defaultZone=http://system-eureka-naming-server-service:8761/eureka
      - spring.cloud.gateway.routes[0].id=custom-text-service
      - spring.cloud.gateway.routes[0].uri=lb://custom-text-service
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/text/**
      - spring.cloud.gateway.routes[1].id=custom-greeting-service
      - spring.cloud.gateway.routes[1].uri=lb://custom-greeting-service
      - spring.cloud.gateway.routes[1].predicates[0]=Path=/greeting/**
    ports:
      - "8090:8090"
    healthcheck:
      test: "exit 0"
    networks:
      - network
    depends_on:
      custom-greeting-service:
        condition: service_healthy

networks:
  network:
    name: custom-network