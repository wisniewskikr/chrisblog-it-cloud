apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-helloworld
  labels:
    app: deployment-helloworld
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-helloworld
  template:
    metadata:
      labels:
        app: container-helloworld
      annotations:
        co.elastic.logs/enabled: "true"
        co.elastic.logs.json-logging/json.keys_under_root: "true"
        co.elastic.logs.json-logging/json.add_error_key: "true"
        co.elastic.logs.json-logging/json.message_key: "message"
    spec:
      containers:
      - name: container-helloworld
        image: helloworld-image
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: spring.application.name
          value: "service-helloworld"
        - name: server.port
          value: "8080"
        - name: eureka.client.service-url.defaultZone
          value: "http://service-discovery-kubernetes:8761/eureka"
        - name: eureka.instance.prefer-ip-address
          value: "true"
        - name: management.endpoints.jmx.exposure.include
          value: "health,info,env,beans"
        - name: management.endpoints.web.exposure.include
          value: "health,info,env,beans"
        - name: service.helloworld.message
          value: "Hello World"
        readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
        livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 15
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: service-helloworld-kubernetes
spec:
  selector:
    app: container-helloworld
  ports:
    - port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: service-helloworld-show
spec:
  type: NodePort
  selector:
    app: container-helloworld
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30002