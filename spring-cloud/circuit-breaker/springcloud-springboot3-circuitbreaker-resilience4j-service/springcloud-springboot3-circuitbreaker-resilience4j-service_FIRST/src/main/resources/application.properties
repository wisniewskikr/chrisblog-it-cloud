# Name
spring.application.name=first

# Port
server.port=8081

# API
api.url=http://localhost:8082
api.timeout.ms=5000

# Actuator Properties
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.fallback-second.registerHealthIndicator=true                      // Register in Actuator
resilience4j.circuitbreaker.instances.fallback-second.slidingWindowType=COUNT_BASED                     // Base on count of requests
resilience4j.circuitbreaker.instances.fallback-second.event-consumer-buffer-size=6                      // Check last 6 requests in CLOSED state
resilience4j.circuitbreaker.instances.fallback-second.slidingWindowSize=3                               // Change state from CLOSED to OPEN if 3 from 6 requests fails
resilience4j.circuitbreaker.instances.fallback-second.minimum-number-of-calls=3                         // Change state from CLOSED to OPEN if 3 requests fails in row
resilience4j.circuitbreaker.instances.fallback-second.failureRateThreshold=50                           // Change state from CLOSED to OPEN if 50% requests fails
resilience4j.circuitbreaker.instances.fallback-second.waitDurationInOpenState=10s                       // Change state from OPEN to HALF_OPEN after 10 seconds
resilience4j.circuitbreaker.instances.fallback-second.permittedNumberOfCallsInHalfOpenState=3           // Change state from HALF_OPEN to CLOSED if 1 of 3 requests fails
resilience4j.circuitbreaker.instances.fallback-second.automaticTransitionFromOpenToHalfOpenEnabled=true // Change state from OPEN to HALF_OPEN automatically