apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-discovery
  labels:
    app: deployment-discovery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-discovery
  template:
    metadata:
      labels:
        app: container-discovery
    spec:
      containers:
      - name: container-discovery
        image: wisniewskikr/springcloud-single-kubernetes-service-discovery-image
        ports:
        - containerPort: 8761
        env:
        - name: spring.application.name
          value: "service-discovery"
        - name: server.port
          value: "8761"
        - name: eureka.client.fetch-registry
          value: "false"
        - name: eureka.client.register-with-eureka
          value: "false"
        readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 5
        livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 5
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-config
  labels:
    app: deployment-config
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-config
  template:
    metadata:
      labels:
        app: container-config
    spec:
      containers:
      - name: container-config
        image: wisniewskikr/springcloud-single-kubernetes-service-config-image
        ports:
        - containerPort: 8888
        env:
        - name: spring.application.name
          value: "service-config"
        - name: server.port
          value: "8888"
        - name: eureka.client.service-url.defaultZone
          value: "http://service-discovery:8761/eureka"
        - name: management.endpoints.jmx.exposure.include
          value: "health,info,env,beans"
        - name: management.endpoints.web.exposure.include
          value: "health,info,env,beans"
        - name: spring.cloud.config.server.git.uri
          value: "https://github.com/wisniewskikr/springcloud-config"
        - name: spring.cloud.config.server.git.clone-on-start
          value: "true"
        readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8888
            initialDelaySeconds: 5
        livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8888
            initialDelaySeconds: 5
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-helloworld
  labels:
    app: deployment-helloworld
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-helloworld
  template:
    metadata:
      labels:
        app: container-helloworld
    spec:
      containers:
      - name: container-helloworld
        image: wisniewskikr/springcloud-single-kubernetes-service-helloworld-image
        ports:
        - containerPort: 8080
        env:
        - name: spring.application.name
          value: "service-helloworld"
        - name: eureka.client.service-url.defaultZone
          value: "http://service-discovery:8761/eureka"
        - name: management.endpoints.jmx.exposure.include
          value: "health,info,env,beans"
        - name: management.endpoints.web.exposure.include
          value: "health,info,env,beans"
        - name: spring.config.import
          value: "optional:configserver:http://service-config:8888"
        readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
        livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-gateway
  labels:
    app: deployment-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: container-gateway
  template:
    metadata:
      labels:
        app: container-gateway
    spec:
      containers:
      - name: container-gateway
        image: wisniewskikr/springcloud-single-kubernetes-service-gateway-image
        ports:
        - containerPort: 8762
        env:
        - name: spring.application.name
          value: "service-gateway"
        - name: server.port
          value: "8762"
        - name: eureka.client.service-url.defaultZone
          value: "http://service-discovery:8761/eureka"
        - name: management.endpoints.jmx.exposure.include
          value: "health,info,env,beans"
        - name: management.endpoints.web.exposure.include
          value: "health,info,env,beans"
        - name: spring.cloud.gateway.routes[0].id
          value: "service-helloworld"
        - name: spring.cloud.gateway.routes[0].uri
          value: "lb://service-helloworld"
        - name: spring.cloud.gateway.routes[0].predicates[0]
          value: "Path=/service-helloworld**"
        - name: spring.cloud.gateway.routes[0].filters[0]
          value: "RewritePath=/service-helloworld,/"
        readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8762
            initialDelaySeconds: 5
        livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8762
            initialDelaySeconds: 5
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: service-discovery
spec:
  selector:
    app: container-discovery
  ports:
    - port: 8761
      targetPort: 8761

---

apiVersion: v1
kind: Service
metadata:
  name: service-config
spec:
  selector:
    app: container-config
  ports:
    - port: 8888
      targetPort: 8888

---

apiVersion: v1
kind: Service
metadata:
  name: service-helloworld
spec:
  selector:
    app: container-helloworld
  ports:
    - port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: service-gateway
spec:
  type: NodePort
  selector:
    app: container-gateway
  ports:
    - protocol: TCP
      port: 8762
      targetPort: 8762
      nodePort: 31000