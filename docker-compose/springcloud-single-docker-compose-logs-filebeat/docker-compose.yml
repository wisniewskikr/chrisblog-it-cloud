version: '3'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch-container
    ports:
        - 9200:9200
    environment:
        discovery.type: single-node
    networks:
      - helloworld-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kibana-container
    ports:
        - 5601:5601
    restart: on-failure
    depends_on:
        - elasticsearch
    networks:
      - helloworld-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.12.1
    container_name: filebeat-container
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
        - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro        # Configuration file
        - /var/lib/docker/containers:/var/lib/docker/containers:ro                  # Docker logs
        - /var/run/docker.sock:/var/run/docker.sock:ro                              # Additional information about containers
    user: root                                                                      # Allow access to log files and docker.sock
    restart: on-failure
    depends_on:
        - kibana
    networks:
      - helloworld-network

  service-discovery:
    image: service-discovery-image
    container_name: service-discovery-container
    build:
      context: ./service-discovery
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-discovery
      - server.port=8761
      - eureka.client.fetch-registry=false
      - eureka.client.register-with-eureka=false
    ports:
      - 8761:8761
    healthcheck:
      test: "exit 0"
    depends_on:
        - filebeat
    networks:
      - helloworld-network

  service-config:
    image: service-config-image
    container_name: service-config-container
    build:
      context: ./service-config
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-config
      - server.port=8888
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - spring.cloud.config.server.git.uri=https://github.com/wisniewskikr/springcloud-config
      #- spring.cloud.config.server.git.clone-on-start=true
    ports:
      - 8888:8888
    healthcheck:
      test: "exit 0"
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - helloworld-network

  service-helloworld:
    image: service-helloworld-image
    container_name: service-helloworld-container
    build:
      context: ./service-helloworld
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-helloworld
      - server.port=8080
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - spring.config.import=optional:configserver:http://service-config:8888
    ports:
      - 8080
    healthcheck:
      test: "exit 0"
    depends_on:
      service-config:
        condition: service_healthy
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
    networks:
      - helloworld-network

  service-gateway:
    image: service-gateway-image
    container_name: service-gateway-container
    build:
      context: ./service-gateway
      dockerfile: Dockerfile-Fast
    environment:
      - spring.application.name=service-gateway
      - server.port=8762
      - eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka
      - management.endpoints.jmx.exposure.include=health,info,env,beans
      - management.endpoints.web.exposure.include=health,info,env,beans
      - spring.cloud.gateway.routes[0].id=service-helloworld
      - spring.cloud.gateway.routes[0].uri=lb://service-helloworld
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/**
      - spring.cloud.gateway.routes[0].filters[0]=RewritePath=/,/
    ports:
      - 8762:8762
    healthcheck:
      test: "exit 0"
    depends_on:
      service-helloworld:
        condition: service_healthy
    networks:
      - helloworld-network  

networks:
  helloworld-network:
    name: helloworld-network